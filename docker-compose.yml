services:
    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        volumes:
            - ./backend/:/backend/
        command: python manage.py runserver 0.0.0.0:8000
        expose:
            - "8000"
        depends_on:
            - frontend
            - postgres
        networks:
            - barbapp-network
        environment:
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
        develop:
            watch:
                - action: sync
                  path: ./backend
                  target: /backend
                  ignore:
                      - venv/
                      - __pycache__/
                - action: rebuild
                  path: requirements.txt

    frontend:
        build:
            context: ./frontend/barbapp
            dockerfile: Dockerfile
        volumes:
            - ./frontend/barbapp/build:/frontend/barbapp/build
        networks:
            - barbapp-network
        env_file:
            - .env
        develop:
            watch:
                - action: sync
                  path: ./frontend/barbapp
                  target: /frontend/barbapp
                  ignore:
                      - node_modules/
                - action: rebuild
                  path: package.json

    postgres:
        image: postgres:13
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        networks:
            - barbapp-network

    nginx:
        image: nginx:latest
        volumes:
            - ./frontend/barbapp/nginx/nginx.config:/etc/nginx/conf.d/default.conf
            - ./frontend/barbapp/build:/frontend/barbapp/build
            - ./backend:/backend
        ports:
            - "80:80"
        depends_on:
            - backend
        networks:
            - barbapp-network

networks:
    barbapp-network:
        driver: bridge
volumes:
    postgres_data:
