services:
    backend:
        build:
            context: ./backend
            dockerfile: dockerfile.prod
        expose:
            - 8000
        environment:
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
        networks:
            - barbapp-network
        depends_on:
            - postgres

    frontend:
        build:
            context: ./frontend/barbapp
            dockerfile: dockerfile.prod
        networks:
            - barbapp-network

    nginx:
        image: nginx:alpine
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
            - ./path/to/media:/path/to/media
        depends_on:
            - backend
            - frontend
        networks:
            - barbapp-network

    postgres:
        image: postgres:13
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        networks:
            - barbapp-network

networks:
    barbapp-network:
        driver: bridge

volumes:
    postgres_data:
